{"version":3,"sources":["webpack:///webpack/bootstrap 429a9ab288ea0f3db7c7","webpack:///./src/injected_working.js","webpack:///./src/helperFuncs.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,qD;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA,wD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,wC;AACA;AACA,gE;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,G;;;;;;AC5CA,+B;AACA;AACA;AACA,wD;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"./dist/injected.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 429a9ab288ea0f3db7c7\n **/","console.log('injected');\r\n\r\nvar hp = require('./helperFuncs.js').helperFuncs;\r\n\r\nvar xhr = window.XMLHttpRequest;\r\n\r\nwindow.XMLHttpRequest = function (){\r\n\r\n\tvar xhrWrapper = this, myXHR = new xhr();\r\n\r\n\tfunction responseListener(){\r\n\t\tif (myXHR.readyState == 4 && myXHR.status == 200){\t\r\n\t\t\tconsole.log('response recieved');\r\n\t\t\thp.save({\r\n\t\t\t\turl : xhrWrapper.__url,\r\n\t\t\t\tpost : xhrWrapper.__post_data,\r\n\t\t\t\tresponse : myXHR.response\r\n\t\t\t});\r\n\t\t\thp.triggerReadyStateChangeEvent(xhrWrapper, myXHR.response);\r\n\t\t\tmyXHR.removeEventListener('readystatechange', this);\t\t\r\n\t\t}\r\n\t}\r\n\r\n\txhrWrapper.readyState = 0;\r\n\r\n\txhrWrapper.open = function(method, url, async, user, pass){\r\n\t\txhrWrapper.__url = url;\r\n\t\tmyXHR.open(method, url, async, user, pass);\r\n\t};\r\n\r\n\txhrWrapper.send = function(post_data){\t\r\n\t\txhrWrapper.__post_data = post_data;\r\n\t\tmyXHR.addEventListener('readystatechange', responseListener);\t\r\n\t\t\r\n\t\tif (!hp.isCached(xhrWrapper.__url)){\r\n\t\t\tconsole.log('not cached', xhrWrapper.__url);\r\n\t\t\tmyXHR.send(post_data);\r\n\t\t}else{\r\n\t\t\tvar cached = hp.getCached(xhrWrapper.__url);\r\n\t\t\thp.triggerReadyStateChangeEvent(xhrWrapper, cached.response);\r\n\t\t}\r\n\t};\r\n\r\n\treturn xhrWrapper;\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/injected_working.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports.helperFuncs = {\t\r\n\tsave (data) {\r\n\t\tconsole.log(\"saved to storage\");\r\n\t\tlocalStorage.setItem(data.url, JSON.stringify(data));\t\t\r\n\t},\r\n\tget (key) {\r\n\t\tvar stored = localStorage.getItem(key);\r\n\t\tconsole.log(\"got from storage\");\r\n\t\treturn JSON.parse(stored);\r\n\t},\r\n\tgetCached (key){\r\n\t\tconsole.log(\"getting cache\");\r\n\t\treturn this.get(key);\r\n\t},\r\n\tisCached (key){\r\n\t\tvar cached = localStorage.getItem(key);\r\n\t\tif (cached) {\r\n\t\t\tconsole.log('is cached');\r\n\t\t}\r\n\t\treturn cached !== null;\r\n\t},\r\n\ttriggerReadyStateChangeEvent(xhrWrapper, response){\r\n\t\txhrWrapper.responseText = response;\r\n\t\txhrWrapper.response = response;\r\n\t\txhrWrapper.readyState = 4;\r\n\t\txhrWrapper.status = 200;\r\n\t\txhrWrapper.onreadystatechange();\r\n\t}\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helperFuncs.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}